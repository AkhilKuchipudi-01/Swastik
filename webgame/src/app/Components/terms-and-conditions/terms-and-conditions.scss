/* ===== Shared container & wrapper (matches other pages) ===== */
.privacyPageContainer,
.termsPageContainer {
    width: 100%;
    padding: 2rem 1rem;
    display: flex;
    justify-content: center;
    font-family: 'Inter', system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
    color: var(--text-color, #222);
    position: relative;
}

.contentWrapper {
    max-width: 1200px;
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 3.5rem;
    position: relative;
}

/* ===== Accent glow (same glow used across site) ===== */
.accentGlow {
    position: absolute;
    top: -60px;
    left: 50%;
    transform: translateX(-50%);
    width: 320px;
    height: 320px;
    border-radius: 50%;
    background: radial-gradient(circle, rgba(156, 39, 176, 0.25), transparent 60%);
    filter: blur(80px);
    pointer-events: none;
    z-index: -1;
    opacity: .5;
    animation: pulseGlow 6s ease-in-out infinite;
}

/* match page hero style */
.heroSection {
    text-align: center;
    padding: 2rem 1rem;
    position: relative;
}

.heroSection h1 {
    font-size: clamp(28px, 3.6vw, 40px);
    font-weight: 800;
    line-height: 1.05;
    margin-bottom: .75rem;
    background: var(--text-color);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

.heroSection p {
    max-width: 900px;
    margin: 0 auto;
    color: var(--muted, --text-color);
    font-size: 1rem;
}

/* ===== Grid & cards (policy / terms) ===== */
.policyGrid,
.termsGrid,
.impactGrid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
    gap: 1.5rem;
    margin-top: 1.25rem;
}

/* shared card base - mirrors .impactCard / .featureCard */
.policyCard,
.termsCard,
.impactCard,
.featureCard,
.valueCard,
.bgEdit {
    border-radius: 14px;
    padding: 1.6rem;
    background: rgba(255, 255, 255, 0.06);
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    border: 1px solid rgba(255, 255, 255, 0.06);
    box-shadow: 0 8px 30px rgba(10, 10, 10, 0.06);
    transition: transform .22s ease, box-shadow .22s ease, border-color .22s ease;
    position: relative;
    overflow: hidden;
}

/* slight lift on hover */
.policyCard:hover,
.termsCard:hover,
.impactCard:hover,
.featureCard:hover {
    transform: translateY(-6px);
    box-shadow: 0 18px 40px rgba(10, 10, 10, 0.10);
}

/* icon size helper same as .fs-1 used across app */
.fs-1 {
    font-size: 2.25rem;
    display: inline-block;
    margin-bottom: .75rem;
}

/* card heading & text */
.policyCard h3,
.termsCard h3,
.impactCard h3,
.featureCard h3 {
    margin: .25rem 0 .5rem 0;
    font-size: 1.05rem;
    font-weight: 700;
    color: var(--card-title, #111);
}

.policyCard p,
.termsCard p,
.impactCard p,
.featureCard p {
    color: var(--muted, rgba(17, 17, 17, .65));
    font-size: .95rem;
    line-height: 1.5;
    margin: 0;
}

/* ===== Reflective streak for .bgEdit cards (used in support page) ===== */
.reflectiveStreak {
    position: absolute;
    right: -20%;
    top: -30%;
    width: 180%;
    height: 180%;
    transform: rotate(30deg);
    background: rgba(255, 255, 255, 0.12);
    filter: blur(28px);
    border-radius: 50%;
    pointer-events: none;
    mix-blend-mode: overlay;
    opacity: .35;
}

/* optional small cover highlight (like nowPlaying coverHighlight) */
.cardCoverHighlight {
    position: absolute;
    left: 8px;
    right: 8px;
    top: 8px;
    height: 8px;
    border-radius: 999px;
    background: rgba(255, 255, 255, 0.85);
    filter: blur(2px);
    pointer-events: none;
    opacity: .9;
}

/* ===== Floating icon animation (consistent) ===== */
@keyframes floatIcon {

    0%,
    100% {
        transform: translateY(0);
    }

    50% {
        transform: translateY(-8px);
    }
}

/* used on inline icons */
.policyCard span,
.termsCard span,
.impactCard span,
.featureCard span {
    display: inline-block;
    animation: floatIcon 3s infinite ease-in-out;
}

/* ===== Accent-aware overrides (apply by adding accent class to section like [ngClass]="accent") =====
   Your app previously used :host-context(body.blueGradient) etc. 
   We'll provide lightweight overrides that will work when the section/container gets a gradient class like .blueGradient, .pinkGradient, etc.
*/
.privacyPageContainer .blueGradient .accentGlow,
.termsPageContainer .blueGradient .accentGlow,
.heroSection.blueGradient .accentGlow {
    background: radial-gradient(circle, rgba(79, 172, 254, 0.28), transparent 60%);
    box-shadow: 0 0 40px rgba(79, 172, 254, 0.25);
}

.privacyPageContainer .pinkGradient .accentGlow,
.termsPageContainer .pinkGradient .accentGlow {
    background: radial-gradient(circle, rgba(255, 106, 136, 0.26), transparent 60%);
    box-shadow: 0 0 40px rgba(255, 106, 136, 0.22);
}

.privacyPageContainer .mintGradient .accentGlow,
.termsPageContainer .mintGradient .accentGlow {
    background: radial-gradient(circle, rgba(67, 233, 123, 0.22), transparent 60%);
    box-shadow: 0 0 40px rgba(67, 233, 123, 0.2);
}

.privacyPageContainer .sunsetGradient .accentGlow,
.termsPageContainer .sunsetGradient .accentGlow {
    background: radial-gradient(circle, rgba(255, 153, 102, 0.26), transparent 60%);
    box-shadow: 0 0 40px rgba(255, 153, 102, 0.22);
}

.privacyPageContainer .blackGradient .accentGlow,
.termsPageContainer .blackGradient .accentGlow {
    background: radial-gradient(circle, rgba(35, 37, 38, 0.22), transparent 60%);
    box-shadow: 0 0 40px rgba(35, 37, 38, 0.16);
}

/* also tint card borders / heading when accent class present on parent wrapper */
.contentWrapper.blueGradient .policyCard,
.contentWrapper.blueGradient .termsCard {
    border-color: rgba(79, 172, 254, 0.12);
}

.contentWrapper.pinkGradient .policyCard,
.contentWrapper.pinkGradient .termsCard {
    border-color: rgba(255, 106, 136, 0.12);
}

.contentWrapper.mintGradient .policyCard,
.contentWrapper.mintGradient .termsCard {
    border-color: rgba(67, 233, 123, 0.12);
}

.contentWrapper.sunsetGradient .policyCard,
.contentWrapper.sunsetGradient .termsCard {
    border-color: rgba(255, 153, 102, 0.12);
}

.contentWrapper.blackGradient .policyCard,
.contentWrapper.blackGradient .termsCard {
    border-color: rgba(255, 255, 255, 0.06);
}

/* change title color subtly to match accent */
.contentWrapper.blueGradient .policyCard h3,
.contentWrapper.blueGradient .termsCard h3 {
    color: #0f6fe0;
}

.contentWrapper.pinkGradient .policyCard h3,
.contentWrapper.pinkGradient .termsCard h3 {
    color: #ff5f97;
}

.contentWrapper.mintGradient .policyCard h3,
.contentWrapper.mintGradient .termsCard h3 {
    color: #0fb87f;
}

.contentWrapper.sunsetGradient .policyCard h3,
.contentWrapper.sunsetGradient .termsCard h3 {
    color: #f57a2a;
}

.contentWrapper.blackGradient .policyCard h3,
.contentWrapper.blackGradient .termsCard h3 {
    color: #f3f3f3;
}

/* ===== Dark mode support (assuming .darkMode on a parent) ===== */
.darkMode .policyCard,
.darkMode .termsCard,
.darkMode .impactCard {
    background: rgba(255, 255, 255, 0.04);
    border-color: rgba(255, 255, 255, 0.06);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.55);
}

.darkMode .heroSection p,
.darkMode .policyCard p,
.darkMode .termsCard p {
    color: rgba(245, 245, 245, 0.75);
}

/* ===== Utility: small helper for contact link styling ===== */
.policyCard a,
.termsCard a {
    color: inherit;
    text-decoration: underline;
}

/* ===== Animations used site-wide ===== */
@keyframes pulseGlow {
    0% {
        transform: translateX(-50%) scale(1);
        opacity: .45;
    }

    50% {
        transform: translateX(-50%) scale(1.12);
        opacity: .75;
    }

    100% {
        transform: translateX(-50%) scale(1);
        opacity: .45;
    }
}

/* ===== Responsive tweaks ===== */
@media (max-width: 900px) {

    .policyGrid,
    .termsGrid,
    .impactGrid {
        gap: 1rem;
    }

    .fs-1 {
        font-size: 1.9rem;
    }
}

@media (max-width: 520px) {
    .heroSection h1 {
        font-size: 1.6rem;
    }

    .contentWrapper {
        gap: 2rem;
        padding: 1rem 0;
    }

    .policyCard,
    .termsCard {
        padding: 1.2rem;
    }
}

.bgEdit:hover,
.bgEdit.active {
    border-radius: 24px;
    background: rgba(255, 255, 255, .6);
    border: 1px solid rgba(255, 255, 255, .5);
    backdrop-filter: blur(24px);
    -webkit-backdrop-filter: blur(24px);
    box-shadow:
        inset 0 1px 0 rgba(255, 255, 255, .5),
        0 20px 60px -20px rgba(0, 0, 0, .45);
    cursor: pointer;
}

.darkMode .bgEdit:hover,
.bgEdit.active {
    background: rgba(255, 255, 255, .08);
    border-color: rgba(255, 255, 255, .1);
}

:host-context(body.blueGradient) {
    .bgEdit {
        background: var(--blueGradient) !important;
    }

    .bgEdit:hover {
        box-shadow: 0 0 40px rgba(79, 172, 254, 0.6);
    }
}

:host-context(body.pinkGradient) {

    .bgEdit {
        background: var(--pinkGradient) !important;
    }

    .bgEdit:hover {
        box-shadow: 0 0 40px rgba(255, 106, 136, 0.6);
    }
}

:host-context(body.mintGradient) {

    .bgEdit {
        background: var(--mintGradient) !important;
    }

    .bgEdit:hover {
        box-shadow: 0 0 40px rgba(67, 233, 123, 0.6);
    }
}

:host-context(body.sunsetGradient) {

    .bgEdit {
        background: var(--sunsetGradient) !important;
    }

    .bgEdit:hover {
        box-shadow: 0 0 40px rgba(255, 153, 102, 0.6);
    }
}

:host-context(body.blackGradient) {

    .bgEdit {
        background: var(--blackGradient) !important;
        color: white;
    }

    .bgEdit:hover {
        box-shadow: 0 0 40px rgba(35, 37, 38, 0.6);
    }
}

.reflectiveStreak {
    position: absolute;
    right: -25%;
    top: -25%;
    width: auto;
    height: auto;
    transform: rotate(45deg);
    background: rgba(255, 255, 255, .28);
    filter: blur(24px);
    border-radius: 50%;
    pointer-events: none;
}